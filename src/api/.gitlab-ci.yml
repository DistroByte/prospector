image: golang:1.22.0

cache:
  key: gocache
  paths:
    - vendor/go/pkg/mod/
    - vendor/cache
    - vendor/linter-cache

variables:
  GOCACHE: ${CI_PROJECT_DIR}/vendor/cache
  GOPATH: ${CI_PROJECT_DIR}/vendor/go
  GOLANGCI_LINT_CACHE: ${CI_PROJECT_DIR}/vendor/linter-cache

stages:
  - test
  - build

before_script:
  - cd src/api

lint:
  stage: test
  script:
    - go vet ./... # this is golang slang for recursively find all packages

unit-test:
  stage: test
  script:
    - go test -v -race -coverprofile=coverage.out ./...
    - "go tool cover -func coverage.out | sed -n -e '/^total/s/:.*statements)[^0-9]*/: /p' > coverage.txt"
    - go get github.com/boumenot/gocover-cobertura
    - go run github.com/boumenot/gocover-cobertura < coverage.out > cobertura.xml
    - go install github.com/jstemmer/go-junit-report/v2@latest
    - go test -v 2>&1 ./... | $GOPATH/bin/go-junit-report -set-exit-code > report.xml
  cache:
    - key: "$CI_COMMIT_REF_SLUG-reports"
      paths:
        - src/api/report.xml
        - src/api/coverage.txt
        - src/api/cobertura.xml

build:
  stage: build
  image: docker:stable
  services:
    - name: docker:dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo $CI_GITEA_KEY | docker login -u distro --password-stdin git.dbyte.xyz
    - cd src/api
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_SHORT_SHA"
        echo "Running on commit '$CI_COMMIT_SHORT_SHA': tag = $tag"
      fi
    - docker build --pull -t "git.dbyte.xyz/distro/prospector/api${tag}" .
    - docker push "git.dbyte.xyz/distro/prospector/api${tag}"
